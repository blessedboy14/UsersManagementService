# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python app workflow

on:
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
 build:
    runs-on: ubuntu-latest
    name: Trying to create docker compose    
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build compose
        run: docker compose build
      - name: Run conpose
        run: docker compose up --abort-on-container-exit --exit-code-from test_db rabbitmq_manage

 lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff check src
          ruff check --fix src
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide

 test:
    needs: build
    runs-on: ubuntu-latest
    environment:
      DOCKERHUB_ACCESS_TOKEN
    services:
      db:
        image: postgres
        env: 
          POSTGRES_USER: ${{ secrets.USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.PASSWORD }}
          POSTGRES_DB: test_management_service
        ports:
          - 5433:5432
      rabbitmq_manage:
        image: rabbitmq:3.10.7-management
        env:
          RABBITMQ_DEFAULT_USER: ${{ secrets.USERNAME }}
          RABBITMQ_DEFAULT_PASS: ${{ secrets.PASSWORD }}
        ports:
          - 15672:15672
          - 5672:5672
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov alembic poetry
          poetry export -f requirements.txt --output requirements.txt --without-hashes
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest and show coverage
        run: |
          alembic upgrade head
          alembic revision --autogenerate -m "Initial tables"
          pytest tests/ --cov=src --cov-append || true
