version: '3.8'
services:
  db:
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${NAME}
      POSTGRES_PASSWORD: ${PASS}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - /home/docker_images/postgres:/var/lib/postgresql/data
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
    restart: always
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - DEBUG=${DEBUG:-0}
    volumes:
      - "/home/docker_images/localstack:/var/lib/localstack"
  cache:
    image: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 30 1 --loglevel warning --requirepass ${PASS}
    volumes:
      - /home/docker_images/redis:/data
  rabbitmq_manage:
    image: rabbitmq:3.10.7-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${NAME}
      RABBITMQ_DEFAULT_PASS: ${PASS}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit disk_free_limit 2147483648
    volumes:
      - /home/docker_images/rabbitmq:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
  backend:
    build: .
    container_name: "backend"
    ports:
      - "8080:8080"
    environment:
      -  PASS=${PASS}
      -  NAME=${NAME}
      -  BUCKET_NAME=images-storage
      -  POSTGRES_HOST=db
      -  REDIS_HOST=cache
      -  RABBITMQ_HOST=rabbitmq_manage
      -  LOCALSTACK_HOST=localstack
      -  RABBITMQ_QUEUE=reset-password-stream
      -  TEST_POSTGRES_HOST=test_db
      -  TEST_DB_PORT=5432

